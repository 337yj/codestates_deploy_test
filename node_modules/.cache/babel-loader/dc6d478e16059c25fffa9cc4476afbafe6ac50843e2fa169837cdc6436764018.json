{"ast":null,"code":"var _jsxFileName = \"/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/MyPage.js\";\nimport React from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './MyPage.scss';\nimport dummyTweets from '../static/dummyData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  const filteredTweets = dummyTweets.filter(tweet => {\n    return tweet.username === \"parkhacker\";\n  });\n  // TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다.\n  console.log(filteredTweets);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"myInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myInfo__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myInfo__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"myInfo__detailName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"28 \\uD314\\uB85C\\uC6CC 100 \\uD314\\uB85C\\uC789\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets__mypage\",\n      children: filteredTweets.map((el, i) => {\n        return /*#__PURE__*/_jsxDEV(Tweet, {\n          tweet: dummyTweets[i]\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","Footer","Tweet","dummyTweets","MyPage","filteredTweets","filter","tweet","username","console","log","map","el","i","id"],"sources":["/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/MyPage.js"],"sourcesContent":["import React from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './MyPage.scss';\nimport dummyTweets from '../static/dummyData';\n\n\nconst MyPage = () => {\n  const filteredTweets = dummyTweets.filter(tweet => {\n    return tweet.username === \"parkhacker\"\n  })\n  // TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다.\n  console.log(filteredTweets)\n\n  return (\n    <section className=\"myInfo\">\n      <div className=\"myInfo__container\">\n        <div className=\"myInfo__wrapper\">\n          <div className=\"myInfo__profile\">\n            {/* <img src={filteredTweets[0].picture} /> */}\n          </div>\n          <div className=\"myInfo__detail\">\n            <p className=\"myInfo__detailName\">\n              {/* {dummyTweets.username} */}\n            </p>\n            <p>28 팔로워 100 팔로잉</p>\n          </div>\n        </div>\n      </div>\n      <ul className=\"tweets__mypage\">\n        {/* TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다. */}\n        {/* <Tweet tweet={filteredTweets}/>\n        {/* {\n          dummyTweets.filter((tweet,i) => {\n            tweet.username === \"parkhacker\"\n            return <Tweet key={tweet.id} tweet={tweet}/>\n          })\n        } */}\n        {/* <Tweet key={filteredTweets.id} tweet={filteredTweets}/>\n        {console.log(dummyTweets)}\n         */}\n         {\n          filteredTweets.map((el, i) => {\n            return (<Tweet key={el.id} tweet={dummyTweets[i]} />)\n          })\n         }\n        \n      </ul>\n      <Footer />\n    </section>\n  );\n};\n\nexport default MyPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,qBAAqB;AAAC;AAG9C,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,cAAc,GAAGF,WAAW,CAACG,MAAM,CAACC,KAAK,IAAI;IACjD,OAAOA,KAAK,CAACC,QAAQ,KAAK,YAAY;EACxC,CAAC,CAAC;EACF;EACAC,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAE3B,oBACE;IAAS,SAAS,EAAC,QAAQ;IAAA,wBACzB;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAK,SAAS,EAAC;QAAiB;UAAA;UAAA;UAAA;QAAA,QAE1B,eACN;UAAK,SAAS,EAAC,gBAAgB;UAAA,wBAC7B;YAAG,SAAS,EAAC;UAAoB;YAAA;YAAA;YAAA;UAAA,QAE7B,eACJ;YAAA,UAAG;UAAc;YAAA;YAAA;YAAA;UAAA,QAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QACjB;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAI,SAAS,EAAC,gBAAgB;MAAA,UAa1BA,cAAc,CAACM,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;QAC5B,oBAAQ,QAAC,KAAK;UAAa,KAAK,EAAEV,WAAW,CAACU,CAAC;QAAE,GAA7BD,EAAE,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAA2B;MACtD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAGD,eACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEd,CAAC;AAAC,KA5CIV,MAAM;AA8CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}