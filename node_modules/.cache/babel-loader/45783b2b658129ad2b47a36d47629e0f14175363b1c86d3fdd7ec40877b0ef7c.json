{"ast":null,"code":"var _jsxFileName = \"/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/Tweets.js\",\n  _s = $RefreshSig$();\n// TODO : useState를 react로 부터 import 합니다.\nimport React, { useRef, useState } from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './Tweets.scss';\nimport dummyTweets from '../static/dummyData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomNumber = (min, max) => {\n  return parseInt(Math.random() * (Number(max) - Number(min) + 2));\n};\nconst Tweets = () => {\n  _s();\n  // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n  const [tweets, setTweets] = useState(dummyTweets);\n  const [form, setForm] = useState({\n    user: \"parkhacker\",\n    msg: \"\"\n  });\n  const sortedtweets = tweets.sort((a, b) => b.id - a.id);\n  const nextId = useRef(6);\n  const handleButtonClick = event => {\n    // TODO : Tweet button 엘리먼트 클릭시 작동하는 함수를 완성하세요.\n    // 트윗 전송이 가능하게 작성해야 합니다.\n    const tweet = {\n      id: nextId.current,\n      username: form.user,\n      picture: form.user === \"parkhacker\" ? `https://randomuser.me/api/portraits/men/98.jpg` : `https://randomuser.me/api/portraits/women/${getRandomNumber(1, 98)}.jpg`,\n      content: form.msg,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    nextId.current += 1;\n    setTweets(prev => [...prev, tweet]);\n    setForm({\n      user: \"parkhacker\",\n      msg: \"\"\n    });\n  };\n  const handleChangeInput = event => {\n    // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetForm__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetForm__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://randomuser.me/api/portraits/men/98.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"your username here..\",\n                name: \"user\",\n                value: form.user,\n                className: \"tweetForm__input--username\",\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                placeholder: \"your tweet here..\",\n                name: \"msg\",\n                value: form.msg,\n                className: \"tweetForm__input--message\",\n                onChange: handleChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__count\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tweetForm__count__text\",\n                children: [\"total: \", tweets.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__submitIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"tweetForm__submitButton\",\n              onClick: handleButtonClick,\n              children: \"Tweet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__selectUser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets\",\n      children: sortedtweets.map((el, i) => {\n        console.log(sortedtweets[el]);\n        return /*#__PURE__*/_jsxDEV(Tweet, {\n          tweet: sortedtweets[i]\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(Tweets, \"3YNcqniXnprrBWU3oHXpo9B3aFM=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useRef","useState","Footer","Tweet","dummyTweets","getRandomNumber","min","max","parseInt","Math","random","Number","Tweets","tweets","setTweets","form","setForm","user","msg","sortedtweets","sort","a","b","id","nextId","handleButtonClick","event","tweet","current","username","picture","content","createdAt","Date","updatedAt","prev","handleChangeInput","name","value","currentTarget","length","map","el","i","console","log"],"sources":["/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/Tweets.js"],"sourcesContent":["// TODO : useState를 react로 부터 import 합니다.\nimport React, { useRef, useState } from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './Tweets.scss';\nimport dummyTweets from '../static/dummyData';\n\nconst getRandomNumber = (min, max) => {\n  return parseInt(Math.random() * (Number(max) - Number(min) + 2));\n};\n\nconst Tweets = () => {\n  // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n  const [tweets, setTweets] = useState(dummyTweets);\n  const [form, setForm] = useState({user: \"parkhacker\", msg: \"\"});\n\n  const sortedtweets = tweets.sort((a, b) => (b.id - a.id));\n\n  const nextId = useRef(6);\n  const handleButtonClick = (event) => {\n    // TODO : Tweet button 엘리먼트 클릭시 작동하는 함수를 완성하세요.\n    // 트윗 전송이 가능하게 작성해야 합니다.\n    const tweet = {\n      id: nextId.current,\n      username: form.user,\n      picture: form.user === \"parkhacker\" ? \n      `https://randomuser.me/api/portraits/men/98.jpg` \n       :`https://randomuser.me/api/portraits/women/${getRandomNumber(1,98)}.jpg`,\n      content: form.msg,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    }\n    nextId.current += 1;\n    setTweets((prev)=>([...prev, tweet]));\n    setForm({user: \"parkhacker\", msg: \"\"});\n  };\n \n  const handleChangeInput = (event) => {\n    // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n    const {name, value} = event.currentTarget;\n    setForm({...form, [name]: value});\n  };\n\n  return (\n      <React.Fragment>\n      <div className=\"tweetForm__container\">\n        <div className=\"tweetForm__wrapper\">\n          <div className=\"tweetForm__profile\">\n            <img src=\"https://randomuser.me/api/portraits/men/98.jpg\" />\n          </div>\n          <div className=\"tweetForm__inputContainer\">\n            <div className=\"tweetForm__inputWrapper\">\n              <div className=\"tweetForm__input\">\n                <input\n                  type=\"text\"\n                  placeholder=\"your username here..\"\n                  name='user'\n                  value={form.user}\n                  className=\"tweetForm__input--username\"\n                  onChange={handleChangeInput}\n                ></input>\n                {/* TODO : 트윗을 작성할 수 있는 textarea 엘리먼트를 작성하세요. */}\n                <textarea\n                  type=\"text\"\n                  placeholder='your tweet here..'\n                  name='msg'\n                  value={form.msg}\n                  className='tweetForm__input--message'\n                  onChange={handleChangeInput}\n                  ></textarea>\n              </div>\n              <div className=\"tweetForm__count\" role=\"status\">\n                <span className=\"tweetForm__count__text\">\n                  {/* TODO : 트윗 총 개수를 보여줄 수 있는 Counter를 작성하세요. */}\n                  total: {tweets.length}\n                </span>\n              </div>\n            </div>\n            <div className=\"tweetForm__submit\">\n              <div className=\"tweetForm__submitIcon\"></div>\n              {/* TODO : 작성한 트윗을 전송할 수 있는 button 엘리먼트를 작성하세요. */}\n              <button \n                type='button' \n                className=\"tweetForm__submitButton\"\n                onClick={handleButtonClick}\n              >Tweet</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweet__selectUser\"></div>\n      <ul className=\"tweets\">\n        {/* TODO : 하나의 트윗이 아니라, 주어진 트윗 목록(dummyTweets) 갯수에 맞게 보여줘야 합니다. */}  \n        {/* MEMO: 1) tweet={dummyTweets[i]}로 prop해주면 createdAt이 undefined라고 에러발생하는 이유가 뭔가요? \n                     sortedtweets 갱신한 값이라 sortedtweets로 해야하는 건가요..?\n                  2) map돌 때 el값만 주고 key={el.id} tweets[el]하면 위와 같은 에러가 발생하는데 이유가 뭔지 모르겠습니다..\n                     블로그 보니까 다들 그냥 el로 줘도 \n                     props로 전해줘야할땐 꼭 index값으로 전달해줘야 하는건가요?\n                  3) 새로고침하면 추가됐던 트윗이 없어지는데 유지하려면 어떻게 해줘야 하나요?\n        */}\n        {\n          sortedtweets.map((el,i)=>{\n            console.log(sortedtweets[el])\n            return <Tweet key={el.id} tweet={sortedtweets[i]} />\n          })\n        }\n      </ul>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Tweets;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}