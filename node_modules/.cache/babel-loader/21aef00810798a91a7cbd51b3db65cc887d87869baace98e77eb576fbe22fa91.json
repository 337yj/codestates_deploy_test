{"ast":null,"code":"var _jsxFileName = \"/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './MyPage.scss';\nimport dummyTweets from '../static/dummyData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  var _filteredTweets$, _filteredTweets$2;\n  const [tweets, setTweets] = useState(localStorage.getItem(dummyTweets) ? JSON.parse(localStorage.getItem(dummyTweets)) : dummyTweets);\n  useEffect(() => {\n    const todoItems_local = localStorage.getItem(dummyTweets);\n    if (todoItems_local) {\n      setTweets(JSON.parse(todoItems_local));\n    }\n  }, []);\n  useEffect(() => {\n    if (tweets) {\n      localStorage.setItem(dummyTweets, JSON.stringify(tweets));\n    }\n  }, [tweets]);\n  const filteredTweets = tweets.filter(tweet => {\n    return tweet.username === \"parkhacker\";\n  });\n  // TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다.\n  console.log(filteredTweets);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"myInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myInfo__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myInfo__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_filteredTweets$ = filteredTweets[0]) === null || _filteredTweets$ === void 0 ? void 0 : _filteredTweets$.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"myInfo__detailName\",\n            children: (_filteredTweets$2 = filteredTweets[0]) === null || _filteredTweets$2 === void 0 ? void 0 : _filteredTweets$2.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"28 \\uD314\\uB85C\\uC6CC 100 \\uD314\\uB85C\\uC789\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets__mypage\",\n      children: filteredTweets.map(tweet => {\n        return /*#__PURE__*/_jsxDEV(Tweet, {\n          tweet: tweet\n        }, tweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPage, \"amXEg5eWuUSsxdXzfcvb08a72ng=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Tweet","dummyTweets","MyPage","tweets","setTweets","localStorage","getItem","JSON","parse","todoItems_local","setItem","stringify","filteredTweets","filter","tweet","username","console","log","picture","map","id"],"sources":["/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/MyPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './MyPage.scss';\nimport dummyTweets from '../static/dummyData';\n\n\nconst MyPage = () => {\n  const [tweets, setTweets] = useState(\n    localStorage.getItem(dummyTweets) \n    ? JSON.parse(localStorage.getItem(dummyTweets))\n    : dummyTweets);\n  \n  useEffect(() => {\n    const todoItems_local = localStorage.getItem(dummyTweets);\n    if (todoItems_local) {\n      setTweets(JSON.parse(todoItems_local));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (tweets) {\n      localStorage.setItem(dummyTweets, JSON.stringify(tweets));\n    }\n  }, [tweets]);\n\n  const filteredTweets = tweets.filter(tweet => {\n    return tweet.username === \"parkhacker\"\n  })\n  // TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다.\n  console.log(filteredTweets)\n  return (\n    <section className=\"myInfo\">\n      <div className=\"myInfo__container\">\n        <div className=\"myInfo__wrapper\">\n          <div className=\"myInfo__profile\">\n            {/* MEMO: 1) 만약 parkhacker의 tweet이 없는경우엔 에러발생하지 않게 옵셔널체이닝으로 하는게 괜찮은 방법일까요? 더 좋은 방법이 있을까요?  \n                      2) 밑에 username은 옵셔널체이닝을 할 경우에 에러발생은 안하지만 이름이 뜨지 않는데 그냥 \"parkhaker\"라고 명시해주어야 하나요? 다른 방법있을까요?\n                      3) Tweets페이지에서 추가한 tweet을 MyPage에도 나오게 하려면 어떻게 해야 하나요?\n            */}\n            <img src={filteredTweets[0]?.picture} />\n          </div>\n          <div className=\"myInfo__detail\">\n            <p className=\"myInfo__detailName\">\n              {filteredTweets[0]?.username}\n            </p>\n            <p>28 팔로워 100 팔로잉</p>\n          </div>\n        </div>\n      </div>\n      <ul className=\"tweets__mypage\">\n        {/* TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다. */}\n         {\n          filteredTweets.map((tweet) => {\n            return <Tweet key={tweet.id} tweet={tweet} />\n          })\n         } \n      </ul>\n      <Footer />\n    </section>\n  );\n};\n\nexport default MyPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,qBAAqB;AAAC;AAG9C,MAAMC,MAAM,GAAG,MAAM;EAAA;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAClCO,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC,GAC/BM,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC,CAAC,GAC7CA,WAAW,CAAC;EAEhBJ,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAGJ,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC;IACzD,IAAIQ,eAAe,EAAE;MACnBL,SAAS,CAACG,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,EAAE;MACVE,YAAY,CAACK,OAAO,CAACT,WAAW,EAAEM,IAAI,CAACI,SAAS,CAACR,MAAM,CAAC,CAAC;IAC3D;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMS,cAAc,GAAGT,MAAM,CAACU,MAAM,CAACC,KAAK,IAAI;IAC5C,OAAOA,KAAK,CAACC,QAAQ,KAAK,YAAY;EACxC,CAAC,CAAC;EACF;EACAC,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAC3B,oBACE;IAAS,SAAS,EAAC,QAAQ;IAAA,wBACzB;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAK,SAAS,EAAC,iBAAiB;UAAA,uBAK9B;YAAK,GAAG,sBAAEA,cAAc,CAAC,CAAC,CAAC,qDAAjB,iBAAmBM;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACpC,eACN;UAAK,SAAS,EAAC,gBAAgB;UAAA,wBAC7B;YAAG,SAAS,EAAC,oBAAoB;YAAA,+BAC9BN,cAAc,CAAC,CAAC,CAAC,sDAAjB,kBAAmBG;UAAQ;YAAA;YAAA;YAAA;UAAA,QAC1B,eACJ;YAAA,UAAG;UAAc;YAAA;YAAA;YAAA;UAAA,QAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QACjB;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAI,SAAS,EAAC,gBAAgB;MAAA,UAG1BH,cAAc,CAACO,GAAG,CAAEL,KAAK,IAAK;QAC5B,oBAAO,QAAC,KAAK;UAAgB,KAAK,EAAEA;QAAM,GAAvBA,KAAK,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAAkB;MAC/C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAED,eACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEd,CAAC;AAAC,GAtDIlB,MAAM;AAAA,KAANA,MAAM;AAwDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}