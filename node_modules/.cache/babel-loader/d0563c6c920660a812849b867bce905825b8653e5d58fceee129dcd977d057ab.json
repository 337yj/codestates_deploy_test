{"ast":null,"code":"var _jsxFileName = \"/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/Tweets.js\",\n  _s = $RefreshSig$();\n// TODO : useState를 react로 부터 import 합니다.\nimport React, { useState } from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './Tweets.scss';\nimport dummyTweets from '../static/dummyData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n  const [tweets, setTweets] = useState(dummyTweets);\n  const handleButtonClick = event => {\n    const tweet = {};\n    // TODO : Tweet button 엘리먼트 클릭시 작동하는 함수를 완성하세요.\n    // 트윗 전송이 가능하게 작성해야 합니다.\n  };\n\n  const handleChangeUser = event => {\n    // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n  };\n  const handleChangeMsg = event => {\n    // TODO : Tweet textarea 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetForm__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetForm__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://randomuser.me/api/portraits/men/98.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: \"parkhacker\",\n                placeholder: \"your username here..\",\n                className: \"tweetForm__input--username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), \"TODO : \\uD2B8\\uC717\\uC744 \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uB294 textarea \\uC5D8\\uB9AC\\uBA3C\\uD2B8\\uB97C \\uC791\\uC131\\uD558\\uC138\\uC694.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__count\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tweetForm__count__text\",\n                children: 'total: '\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__submit\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__submitIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__selectUser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets\",\n      children: /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: dummyTweets[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"WwnXsOfJQMCfihuxYL7YKgXdTPQ=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useState","Footer","Tweet","dummyTweets","Tweets","tweets","setTweets","handleButtonClick","event","tweet","handleChangeUser","handleChangeMsg"],"sources":["/home/yun/Desktop/abc-lab-fe-react-twittler-state-props/src/pages/Tweets.js"],"sourcesContent":["// TODO : useState를 react로 부터 import 합니다.\nimport React, { useState } from 'react';\nimport Footer from '../components/Layout/Footer';\nimport Tweet from '../components/Tweet';\nimport './Tweets.scss';\nimport dummyTweets from '../static/dummyData';\n\nconst Tweets = () => {\n  // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n  const [tweets, setTweets] = useState(dummyTweets)\n\n  const handleButtonClick = (event) => {\n    const tweet = {};\n    // TODO : Tweet button 엘리먼트 클릭시 작동하는 함수를 완성하세요.\n    // 트윗 전송이 가능하게 작성해야 합니다.\n  };\n\n  const handleChangeUser = (event) => {\n    // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n  };\n\n  const handleChangeMsg = (event) => {\n    // TODO : Tweet textarea 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"tweetForm__container\">\n        <div className=\"tweetForm__wrapper\">\n          <div className=\"tweetForm__profile\">\n            <img src=\"https://randomuser.me/api/portraits/men/98.jpg\" />\n          </div>\n          <div className=\"tweetForm__inputContainer\">\n            <div className=\"tweetForm__inputWrapper\">\n              <div className=\"tweetForm__input\">\n                <input\n                  type=\"text\"\n                  defaultValue=\"parkhacker\"\n                  placeholder=\"your username here..\"\n                  className=\"tweetForm__input--username\"\n                ></input>\n                TODO : 트윗을 작성할 수 있는 textarea 엘리먼트를 작성하세요.\n              </div>\n              <div className=\"tweetForm__count\" role=\"status\">\n                <span className=\"tweetForm__count__text\">\n                  {/* TODO : 트윗 총 개수를 보여줄 수 있는 Counter를 작성하세요. */}\n                  {'total: '}\n                </span>\n              </div>\n            </div>\n            <div className=\"tweetForm__submit\">\n              <div className=\"tweetForm__submitIcon\"></div>\n              {/* TODO : 작성한 트윗을 전송할 수 있는 button 엘리먼트를 작성하세요. */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweet__selectUser\"></div>\n      <ul className=\"tweets\">\n        {/* TODO : 하나의 트윗이 아니라, 주어진 트윗 목록(dummyTweets) 갯수에 맞게 보여줘야 합니다. */}\n        <Tweet tweet={dummyTweets[0]} />\n      </ul>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Tweets;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,qBAAqB;AAAC;AAE9C,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAACG,WAAW,CAAC;EAEjD,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAG,CAAC,CAAC;IAChB;IACA;EACF,CAAC;;EAED,MAAMC,gBAAgB,GAAIF,KAAK,IAAK;IAClC;EAAA,CACD;EAED,MAAMG,eAAe,GAAIH,KAAK,IAAK;IACjC;EAAA,CACD;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAK,SAAS,EAAC,oBAAoB;QAAA,wBACjC;UAAK,SAAS,EAAC,oBAAoB;UAAA,uBACjC;YAAK,GAAG,EAAC;UAAgD;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACxD,eACN;UAAK,SAAS,EAAC,2BAA2B;UAAA,wBACxC;YAAK,SAAS,EAAC,yBAAyB;YAAA,wBACtC;cAAK,SAAS,EAAC,kBAAkB;cAAA,wBAC/B;gBACE,IAAI,EAAC,MAAM;gBACX,YAAY,EAAC,YAAY;gBACzB,WAAW,EAAC,sBAAsB;gBAClC,SAAS,EAAC;cAA4B;gBAAA;gBAAA;gBAAA;cAAA,QAC/B,4IAEX;YAAA;cAAA;cAAA;cAAA;YAAA,QAAM,eACN;cAAK,SAAS,EAAC,kBAAkB;cAAC,IAAI,EAAC,QAAQ;cAAA,uBAC7C;gBAAM,SAAS,EAAC,wBAAwB;gBAAA,UAErC;cAAS;gBAAA;gBAAA;gBAAA;cAAA;YACL;cAAA;cAAA;cAAA;YAAA,QACH;UAAA;YAAA;YAAA;YAAA;UAAA,QACF,eACN;YAAK,SAAS,EAAC,mBAAmB;YAAA,uBAChC;cAAK,SAAS,EAAC;YAAuB;cAAA;cAAA;cAAA;YAAA;UAAO;YAAA;YAAA;YAAA;UAAA,QAEzC;QAAA;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAO,eACzC;MAAI,SAAS,EAAC,QAAQ;MAAA,uBAEpB,QAAC,KAAK;QAAC,KAAK,EAAEL,WAAW,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7B,eACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB,CAAC;AAAC,GA1DIC,MAAM;AAAA,KAANA,MAAM;AA4DZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}